<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving	up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>


	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
<!-- 스케쥴러파일이 존재하는 패키지 설정 -->
    <context:component-scan base-package="co.Nasa.prj.admin.controller" />
    <!-- 해당 태그들은 크론탭을 설정에 필요한 태그들 -->
	    <task:scheduler id="jobScheduler" pool-size="10" />
	    <task:annotation-driven scheduler="jobScheduler" />

	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>WEB-INF/spring/appServlet/tiles-define.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean class="co.Nasa.prj.login.service.NaverLoginBO" id="naverLoginBO" />



	<!-- 스프링에서 기본으로 제공하는 multipartResolver는 CommonsMultipartResolver 이므로, 순수한 
		multipartResolver를 사용하기 위해 빈 이름으로 "multipartResolver"를 등록해야함 + 프로퍼티를 이용 최대 
		가능한 업로드 사이즈 지정함 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />
		<beans:property name="maxInMemorySize" value="1000000" />
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>

	<!-- EXCEL VIEW Resolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="2" />
	</beans:bean>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean p:order="3" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<util:properties id="upload" location="classpath:/config/db.properties">
	
	</util:properties>

	<context:component-scan	base-package="co.Nasa.prj" />
	<!-- 웹 소켓 핸들러 -->
	<websocket:handlers>
		<websocket:mapping path="/websocket/echo.do" handler="WebSocketHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>

	<!-- <websocket:sockjs websocket-enabled="true" /> -->
	<beans:bean id="WebSocketHandler" class="co.Nasa.prj.chatting.controller.WebSocketHandler" />

	<!-- gmail설정 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="username" value="yedamnasa@gmail.com"/>
		<beans:property name="password" value="yedam1234"/>
		<beans:property name="defaultEncoding" value="utf-8"/>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.smtps.ssl.checkserveridentity">true</beans:prop>
				<beans:prop key="mail.smtps.ssl.trust">*</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
			</beans:props>
		
		</beans:property>
	</beans:bean>
	
</beans:beans>